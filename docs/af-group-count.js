var n=Object.defineProperty;var l=(i,e,t)=>e in i?n(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var s=(i,e,t)=>(l(i,typeof e!="symbol"?e+"":e,t),t);import{m as u}from"./assets/helpers-BDWkIbAD.js";class a extends HTMLElement{constructor(){super();s(this,"shadow");s(this,"min");s(this,"max");s(this,"internals",this.attachInternals());u(this,[{attr:"min",type:"number",defaultValue:1},{attr:"max",type:"number",defaultValue:1/0}]),this.shadow=this.attachShadow({mode:"open"}),this.shadow.innerHTML=`${this.value}`,this.setValidity()}get value(){return Number(this.shadow.textContent||"0")}set value(t){this.shadow.textContent=t.toString(),this.setValidity()}attributeChangedCallback(){this.setValidity()}checkValidity(){return this.value>=this.min&&this.value<=this.max}setValidity(){const t=this.checkValidity();t?this.internals.setValidity({}):this.internals.setValidity({customError:!0},"Value is out of range"),this.dispatchEvent(new CustomEvent("count",{bubbles:!0,composed:!0,detail:{value:this.value,validity:t}}))}}s(a,"formAssociated",!0);customElements.define("af-group-count",a);
//# sourceMappingURL=af-group-count.js.map
