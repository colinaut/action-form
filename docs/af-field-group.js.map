{"version":3,"file":"af-field-group.js","sources":["../src/af-group-count.ts","../src/af-field-group.ts"],"sourcesContent":["import type ActionFormFieldGroup from \"./af-field-group\";\n// TODO: convert this to simple element that shows value from the af-field-group\nexport default class ActionFormGroupCount extends HTMLElement {\n\tpublic afFieldGroup = this.closest(\"af-field-group\") as ActionFormFieldGroup | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.render();\n\t\tthis.afFieldGroup?.addEventListener(\"change\", () => this.render());\n\t}\n\tget value() {\n\t\tif (this.afFieldGroup) {\n\t\t\treturn this.afFieldGroup.value;\n\t\t}\n\t\treturn 0;\n\t}\n\n\trender() {\n\t\tthis.innerHTML = `${this.value.toString()}`;\n\t}\n}\n","import ActionFormGroupCount from \"./af-group-count\";\nexport default class ActionFormFieldGroup extends HTMLElement {\n\tprivate readonly shadow = this.attachShadow({ mode: \"open\" });\n\tprivate internals: ElementInternals = this.attachInternals();\n\tstatic formAssociated = true;\n\tpublic name: string = this.getAttribute(\"name\") || \"\";\n\n\tget min(): number {\n\t\treturn Number(this.getAttribute(\"min\") || 0);\n\t}\n\n\tget max(): number {\n\t\treturn Number(this.getAttribute(\"max\") || Infinity);\n\t}\n\n\tget value(): number {\n\t\tlet values = [];\n\t\tconst fields = this.querySelectorAll(\"input, select, textarea\") as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;\n\t\tvalues = Array.from(fields).filter((field) =>\n\t\t\tfield instanceof HTMLInputElement && [\"checkbox\", \"radio\"].includes(field.type) ? field.checked : field.checkValidity() && field.value\n\t\t);\n\t\treturn values.length;\n\t}\n\n\tset value(value: number) {\n\t\tthis.setAttribute(\"value\", String(value));\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.render();\n\t\tthis.checkValidity();\n\t\tthis.addEventListener(\"change\", (event) => {\n\t\t\t// ignore changes from this element\n\t\t\tif (event.target === this) return;\n\t\t\t// check validity and send change event from this element to trigger error message\n\t\t\tthis.checkValidity();\n\t\t\tthis.dispatchEvent(new Event(\"change\", { bubbles: true, composed: true }));\n\t\t});\n\t}\n\n\tpublic focus() {\n\t\t// override focus event to focus the first field element\n\t\t// not sure why adding eventListener for \"focus\" event didn't work, but this does for my needs\n\t\tconst firstField = this.querySelector(\"input, select, textarea\") as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n\t\tif (firstField) firstField.focus();\n\t}\n\n\tpublic checkValidity(): boolean {\n\t\tconst validity = this.value >= this.min && this.value <= this.max;\n\t\tthis.setValidity(validity);\n\t\treturn validity;\n\t}\n\n\tpublic setValidity(validity: boolean): void {\n\t\tconst flags = validity ? {} : { customError: true };\n\t\tconst message = validity ? \"\" : \"Value is out of range\";\n\t\tthis.internals.setValidity(flags, message);\n\t\tthis.setAttribute(\"validity\", String(validity));\n\t}\n\n\trender() {\n\t\tthis.shadow.innerHTML = `<slot></slot>`;\n\t}\n}\n\ncustomElements.define(\"af-field-group\", ActionFormFieldGroup);\n\ncustomElements.define(\"af-group-count\", ActionFormGroupCount);\n"],"names":["ActionFormGroupCount","_a","__publicField","ActionFormFieldGroup","event","values","fields","field","value","firstField","validity","flags","message"],"mappings":"wKAEA,MAAqBA,UAA6B,WAAY,CAG7D,aAAc,CAHf,IAAAC,EAIQ,QAHAC,EAAA,oBAAe,KAAK,QAAQ,gBAAgB,GAIlD,KAAK,OAAO,GACZD,EAAA,KAAK,eAAL,MAAAA,EAAmB,iBAAiB,SAAU,IAAM,KAAK,SAC1D,CACA,IAAI,OAAQ,CACX,OAAI,KAAK,aACD,KAAK,aAAa,MAEnB,CACR,CAEA,QAAS,CACR,KAAK,UAAY,GAAG,KAAK,MAAM,SAAU,CAAA,EAC1C,CACD,CCnBA,MAAqBE,UAA6B,WAAY,CA2B7D,aAAc,CACP,QA3BUD,EAAA,cAAS,KAAK,aAAa,CAAE,KAAM,MAAQ,CAAA,GACpDA,EAAA,iBAA8B,KAAK,mBAEpCA,EAAA,YAAe,KAAK,aAAa,MAAM,GAAK,IAyBlD,KAAK,OAAO,EACZ,KAAK,cAAc,EACd,KAAA,iBAAiB,SAAWE,GAAU,CAEtCA,EAAM,SAAW,OAErB,KAAK,cAAc,EACd,KAAA,cAAc,IAAI,MAAM,SAAU,CAAE,QAAS,GAAM,SAAU,EAAM,CAAA,CAAC,EAAA,CACzE,CACF,CAhCA,IAAI,KAAc,CACjB,OAAO,OAAO,KAAK,aAAa,KAAK,GAAK,CAAC,CAC5C,CAEA,IAAI,KAAc,CACjB,OAAO,OAAO,KAAK,aAAa,KAAK,GAAK,GAAQ,CACnD,CAEA,IAAI,OAAgB,CACnB,IAAIC,EAAS,CAAA,EACP,MAAAC,EAAS,KAAK,iBAAiB,yBAAyB,EACrD,OAAAD,EAAA,MAAM,KAAKC,CAAM,EAAE,OAAQC,GACnCA,aAAiB,kBAAoB,CAAC,WAAY,OAAO,EAAE,SAASA,EAAM,IAAI,EAAIA,EAAM,QAAUA,EAAM,cAAA,GAAmBA,EAAM,KAAA,EAE3HF,EAAO,MACf,CAEA,IAAI,MAAMG,EAAe,CACxB,KAAK,aAAa,QAAS,OAAOA,CAAK,CAAC,CACzC,CAeO,OAAQ,CAGR,MAAAC,EAAa,KAAK,cAAc,yBAAyB,EAC3DA,GAAYA,EAAW,MAAM,CAClC,CAEO,eAAyB,CAC/B,MAAMC,EAAW,KAAK,OAAS,KAAK,KAAO,KAAK,OAAS,KAAK,IAC9D,YAAK,YAAYA,CAAQ,EAClBA,CACR,CAEO,YAAYA,EAAyB,CAC3C,MAAMC,EAAQD,EAAW,CAAA,EAAK,CAAE,YAAa,EAAK,EAC5CE,EAAUF,EAAW,GAAK,wBAC3B,KAAA,UAAU,YAAYC,EAAOC,CAAO,EACzC,KAAK,aAAa,WAAY,OAAOF,CAAQ,CAAC,CAC/C,CAEA,QAAS,CACR,KAAK,OAAO,UAAY,eACzB,CACD,CA5DCR,EAHoBC,EAGb,iBAAiB,IA8DzB,eAAe,OAAO,iBAAkBA,CAAoB,EAE5D,eAAe,OAAO,iBAAkBH,CAAoB"}