{"version":3,"file":"action-form.js","sources":["../src/action-form.ts"],"sourcesContent":["import ActionFormStep from \"./af-step\";\nexport default class ActionForm extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tdocument.documentElement.classList.add(\"js\");\n\n\t\tif (this.form) {\n\t\t\t/*\n\t\t\t * Set novalidate on the form if novalidate set on action-form.\n\t\t\t * This way novalidate is only set if javascript is loaded and form-action is defined.\n\t\t\t * We want to allow falling back to browser validation if javascript is not loaded.\n\t\t\t */\n\t\t\tif (this.hasAttribute(\"novalidate\")) {\n\t\t\t\tthis.form.setAttribute(\"novalidate\", \"\");\n\t\t\t}\n\n\t\t\tthis.setAttribute(\"loaded\", \"\");\n\n\t\t\tthis.enhanceFieldsets();\n\n\t\t\tthis.steps.forEach((step, i) => {\n\t\t\t\t// need to add as attribute rather than set directly as the setter is not called until element is loaded\n\t\t\t\tstep.setAttribute(\"index\", String(i)); // index = i;\n\t\t\t\tif (i === 0) step.setAttribute(\"active\", \"\"); // active = i === 0;\n\t\t\t});\n\n\t\t\tthis.addEventListener(\"af-step\", (event) => {\n\t\t\t\tconst customEvent = event as CustomEvent<{ step: number }>;\n\t\t\t\tconsole.log(\"af-step\", customEvent.detail.step);\n\t\t\t\tthis.stepIndex = customEvent.detail.step;\n\t\t\t\tthis.steps.forEach((step, i) => {\n\t\t\t\t\t// if current step is valid, set completed\n\t\t\t\t\tif (step.active) step.completed = step.valid;\n\t\t\t\t\t// set active based on index\n\t\t\t\t\tstep.active = i === this.stepIndex;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic form = this.querySelector(\"form\");\n\tpublic stepIndex: number = 0; // current step\n\tpublic steps: NodeListOf<ActionFormStep> = this.querySelectorAll(\"af-step\");\n\tpublic fieldsets: NodeListOf<HTMLFieldSetElement> = this.querySelectorAll(\"fieldset\");\n\tpublic formElements: NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement> = this.querySelectorAll(\"input, select, textarea\");\n\n\tprivate enhanceFieldsets() {\n\t\tthis.fieldsets.forEach((fieldset) => {\n\t\t\tconst watch = fieldset.dataset.watch;\n\t\t\tconst watchValue = fieldset.dataset.value;\n\t\t\tconst watchRegex = fieldset.dataset.regex;\n\t\t\tif (watch) {\n\t\t\t\t// Get watched fields in form based on name\n\t\t\t\tconst fields = Array.from(this.formElements).filter((field) => field.name.toLowerCase() === watch.toLowerCase());\n\n\t\t\t\tif (fields.length === 0) return;\n\t\t\t\tconsole.log(fieldset.name, \"watching\", watch, fields);\n\n\t\t\t\tfields.forEach((field) => {\n\t\t\t\t\tfield.addEventListener(\"change\", () => {\n\t\t\t\t\t\tif (!watchValue && !watchRegex) {\n\t\t\t\t\t\t\t// if there is no value or regex to check then show the fieldset based on validity\n\t\t\t\t\t\t\tconsole.log(\"change no value\", field.value);\n\t\t\t\t\t\t\tthis.show(fieldset, field.checkValidity());\n\t\t\t\t\t\t} else if (field instanceof HTMLInputElement && [\"checkbox\", \"radio\"].includes(field.type)) {\n\t\t\t\t\t\t\t// if is an input of type radio or checkbox then make sure the value matches and show based on checkbox status\n\t\t\t\t\t\t\tconsole.log(\"change checkbox\", field.value);\n\t\t\t\t\t\t\tif (this.checkMatches(field.value, watchValue, watchRegex)) {\n\t\t\t\t\t\t\t\tthis.show(fieldset, field.checked);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// else show based on value\n\t\t\t\t\t\t\tconsole.log(\"change else\", field.value);\n\t\t\t\t\t\t\tthis.show(fieldset, this.checkMatches(field.value, watchValue, watchRegex));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// this.show(field.value, regex);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate checkMatches(value: string, watchValue: string = \"\", watchRegex: string | undefined): boolean {\n\t\tif (watchRegex) {\n\t\t\tconst regex = new RegExp(watchRegex);\n\t\t\t// if regex matches then return true\n\t\t\treturn regex.test(value);\n\t\t} else {\n\t\t\t// if values match then return true\n\t\t\treturn watchValue === value;\n\t\t}\n\t}\n\n\tprivate show(fieldset: HTMLFieldSetElement, show: boolean): void {\n\t\tif (show) {\n\t\t\tfieldset.removeAttribute(\"hidden\");\n\t\t\tfieldset.removeAttribute(\"disabled\");\n\t\t} else {\n\t\t\tfieldset.setAttribute(\"hidden\", \"\");\n\t\t\tfieldset.setAttribute(\"disabled\", \"\");\n\t\t}\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tconsole.log(\"connected\");\n\t}\n\n\t// public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t// \tconsole.log(\"changed\", name, oldValue, newValue);\n\t// }\n}\ncustomElements.define(\"action-form\", ActionForm);\n"],"names":["ActionForm","__publicField","step","i","event","customEvent","fieldset","watch","watchValue","watchRegex","fields","field","value","show"],"mappings":"wKACA,MAAqBA,UAAmB,WAAY,CACnD,aAAc,CACP,QAqCAC,EAAA,YAAO,KAAK,cAAc,MAAM,GAChCA,EAAA,iBAAoB,GACpBA,EAAA,aAAoC,KAAK,iBAAiB,SAAS,GACnEA,EAAA,iBAA6C,KAAK,iBAAiB,UAAU,GAC7EA,EAAA,oBAAuF,KAAK,iBAAiB,yBAAyB,GAxCnI,SAAA,gBAAgB,UAAU,IAAI,IAAI,EAEvC,KAAK,OAMJ,KAAK,aAAa,YAAY,GAC5B,KAAA,KAAK,aAAa,aAAc,EAAE,EAGnC,KAAA,aAAa,SAAU,EAAE,EAE9B,KAAK,iBAAiB,EAEtB,KAAK,MAAM,QAAQ,CAACC,EAAMC,IAAM,CAE/BD,EAAK,aAAa,QAAS,OAAOC,CAAC,CAAC,EAChCA,IAAM,GAAQD,EAAA,aAAa,SAAU,EAAE,CAAA,CAC3C,EAEI,KAAA,iBAAiB,UAAYE,GAAU,CAC3C,MAAMC,EAAcD,EACpB,QAAQ,IAAI,UAAWC,EAAY,OAAO,IAAI,EACzC,KAAA,UAAYA,EAAY,OAAO,KACpC,KAAK,MAAM,QAAQ,CAACH,EAAMC,IAAM,CAE3BD,EAAK,SAAQA,EAAK,UAAYA,EAAK,OAElCA,EAAA,OAASC,IAAM,KAAK,SAAA,CACzB,CAAA,CACD,EAEH,CAQQ,kBAAmB,CACrB,KAAA,UAAU,QAASG,GAAa,CAC9B,MAAAC,EAAQD,EAAS,QAAQ,MACzBE,EAAaF,EAAS,QAAQ,MAC9BG,EAAaH,EAAS,QAAQ,MACpC,GAAIC,EAAO,CAEV,MAAMG,EAAS,MAAM,KAAK,KAAK,YAAY,EAAE,OAAQC,GAAUA,EAAM,KAAK,YAAkB,IAAAJ,EAAM,aAAa,EAE/G,GAAIG,EAAO,SAAW,EAAG,OACzB,QAAQ,IAAIJ,EAAS,KAAM,WAAYC,EAAOG,CAAM,EAE7CA,EAAA,QAASC,GAAU,CACnBA,EAAA,iBAAiB,SAAU,IAAM,CAClC,CAACH,GAAc,CAACC,GAEX,QAAA,IAAI,kBAAmBE,EAAM,KAAK,EAC1C,KAAK,KAAKL,EAAUK,EAAM,cAAe,CAAA,GAC/BA,aAAiB,kBAAoB,CAAC,WAAY,OAAO,EAAE,SAASA,EAAM,IAAI,GAEhF,QAAA,IAAI,kBAAmBA,EAAM,KAAK,EACtC,KAAK,aAAaA,EAAM,MAAOH,EAAYC,CAAU,GACnD,KAAA,KAAKH,EAAUK,EAAM,OAAO,IAI1B,QAAA,IAAI,cAAeA,EAAM,KAAK,EACjC,KAAA,KAAKL,EAAU,KAAK,aAAaK,EAAM,MAAOH,EAAYC,CAAU,CAAC,EAC3E,CAEA,CAAA,CACD,CACF,CAAA,CACA,CACF,CAEQ,aAAaG,EAAeJ,EAAqB,GAAIC,EAAyC,CACrG,OAAIA,EACW,IAAI,OAAOA,CAAU,EAEtB,KAAKG,CAAK,EAGhBJ,IAAeI,CAExB,CAEQ,KAAKN,EAA+BO,EAAqB,CAC5DA,GACHP,EAAS,gBAAgB,QAAQ,EACjCA,EAAS,gBAAgB,UAAU,IAE1BA,EAAA,aAAa,SAAU,EAAE,EACzBA,EAAA,aAAa,WAAY,EAAE,EAEtC,CAEO,mBAA0B,CAChC,QAAQ,IAAI,WAAW,CACxB,CAKD,CACA,eAAe,OAAO,cAAeN,CAAU"}