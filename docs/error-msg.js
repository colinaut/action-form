var b=Object.defineProperty;var f=(i,r,t)=>r in i?b(i,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[r]=t;var c=(i,r,t)=>(f(i,typeof r!="symbol"?r+"":r,t),t);function g(i){return i instanceof HTMLInputElement&&["radio","checkbox","range","color","file"].includes(i.type)||i instanceof HTMLSelectElement}function p(i){return i instanceof HTMLInputElement&&["text","email","tel","password","date","month","number","datetime-local","time","url","week"].includes(i.type)||i instanceof HTMLTextAreaElement}class E extends HTMLElement{constructor(){super();c(this,"hiddenValid",document.createElement("input"));c(this,"getMakeId",t=>{const n=this.getAttribute("id");if(n)return n;const e=`${t}-${Math.random().toString(36).substring(2,9)}`;return this.setAttribute("id",e),e})}hide(t,n){t?(this.removeAttribute("show"),n.removeAttribute("aria-invalid")):(this.setAttribute("show",""),n.setAttribute("aria-invalid","true"))}connectedCallback(){const t=this.getAttribute("watch")||"",n=this.closest("form"),e=n==null?void 0:n.querySelector(`:where(input, select, textarea, fieldset)[name=${t}]`);if(!e)return;const u=this.getMakeId(t);if(e.setAttribute("aria-describedby",u),p(e)&&e.addEventListener("blur",()=>{this.hide(e.checkValidity(),e)}),g(e)&&e.addEventListener("change",()=>{this.hide(e.checkValidity(),e)}),e instanceof HTMLFieldSetElement){const a=e.querySelectorAll("input, select, textarea");this.addValidityField(e,t);const l=Number(e.getAttribute("min")||1),h=Number(e.getAttribute("max")||a.length);e.addEventListener("change",m=>{if(l||h){const d=m.target;if(!(d instanceof HTMLSelectElement||d instanceof HTMLInputElement||d instanceof HTMLTextAreaElement))return;if(Array.from(a).includes(d)){const o=Array.from(a).filter(s=>s instanceof HTMLInputElement&&["checkbox","radio"].includes(s.type)?s.checked:s.value);o.length>=l&&o.length<=h?(this.hiddenValid.checked=!0,this.dispatchHiddenValid(!0)):this.dispatchHiddenValid(!1)}}this.hide(e.querySelectorAll(":invalid").length===0,e)})}}dispatchHiddenValid(t){this.hiddenValid.checked=t,this.hiddenValid.dispatchEvent(new Event("change",{bubbles:!0}))}addValidityField(t,n){const e=this.hiddenValid;e.type="checkbox",e.name=`action-fieldset-${n}`,e.setAttribute("required",""),e.style.display="none",e.value="valid",t.append(e)}}customElements.define("error-msg",E);
//# sourceMappingURL=error-msg.js.map
