{"version":3,"file":"af-preview.js","sources":["../src/af-preview.ts"],"sourcesContent":["function convertToTitleCase(str: string): string {\n\treturn str\n\t\t.replace(/[-_](.)/g, function (match) {\n\t\t\treturn \" \" + match.charAt(1).toUpperCase();\n\t\t})\n\t\t.replace(/([a-z])([A-Z])/g, \"$1 $2\")\n\t\t.replace(/^./, function (match) {\n\t\t\treturn match.toUpperCase();\n\t\t});\n}\nexport default class ActionFormPreview extends HTMLElement {\n\tprivate form: HTMLFormElement | null;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst forId = this.getAttribute(\"for\");\n\t\tthis.form = forId ? (document.getElementById(forId) as HTMLFormElement | null) : (this.closest(\"form\") as HTMLFormElement | null);\n\t\tif (!this.form) return;\n\n\t\tthis.render();\n\t\tconst eventType = this.getAttribute(\"event-type\") || \"change\";\n\t\tthis.form.addEventListener(eventType, () => {\n\t\t\tthis.render();\n\t\t});\n\t}\n\n\tget ignore(): string[] {\n\t\treturn this.getAttribute(\"ignore\")?.split(\",\") || [];\n\t}\n\n\tgetFormData() {\n\t\tif (!this.form) return;\n\t\tconst formData = new FormData(this.form);\n\n\t\tconst keys = [...new Set(Array.from(formData.keys()))];\n\n\t\treturn keys\n\t\t\t.filter((key) => !this.ignore.includes(key) && formData.getAll(key).some((value) => value !== \"\"))\n\t\t\t.map((key) => {\n\t\t\t\tconst values = formData.getAll(key);\n\t\t\t\tconst stringValues = values.filter((value) => typeof value === \"string\") as string[];\n\t\t\t\treturn {\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue: stringValues,\n\t\t\t\t};\n\t\t\t});\n\t\t// const values = Array.from(formData.values());\n\t\t// return values;\n\t}\n\n\trender() {\n\t\tconst data = this.getFormData();\n\n\t\tconst valuesToText = (values: string[]) => {\n\t\t\treturn values.length === 1 ? values[0] : values.map((value) => `<span>${value}</span>`).join(\", \");\n\t\t};\n\n\t\tthis.innerHTML = `<ul>${data\n\t\t\t?.map((item) => `<li><strong>${this.hasAttribute(\"title-case\") ? convertToTitleCase(item.key) : item.key}</strong>: ${valuesToText(item.value)}</li>`)\n\t\t\t.join(\"\")}</ul>`;\n\t}\n}\n\ncustomElements.define(\"af-preview\", ActionFormPreview);\n"],"names":["convertToTitleCase","str","match","ActionFormPreview","__publicField","forId","eventType","_a","formData","key","value","stringValues","data","valuesToText","values","item"],"mappings":"wKAAA,SAASA,EAAmBC,EAAqB,CAChD,OAAOA,EACL,QAAQ,WAAY,SAAUC,EAAO,CACrC,MAAO,IAAMA,EAAM,OAAO,CAAC,EAAE,YAAY,CAAA,CACzC,EACA,QAAQ,kBAAmB,OAAO,EAClC,QAAQ,KAAM,SAAUA,EAAO,CAC/B,OAAOA,EAAM,aAAY,CACzB,CACH,CACA,MAAqBC,UAA0B,WAAY,CAG1D,aAAc,CACP,QAHCC,EAAA,aAKD,MAAAC,EAAQ,KAAK,aAAa,KAAK,EAErC,GADK,KAAA,KAAOA,EAAS,SAAS,eAAeA,CAAK,EAAgC,KAAK,QAAQ,MAAM,EACjG,CAAC,KAAK,KAAM,OAEhB,KAAK,OAAO,EACZ,MAAMC,EAAY,KAAK,aAAa,YAAY,GAAK,SAChD,KAAA,KAAK,iBAAiBA,EAAW,IAAM,CAC3C,KAAK,OAAO,CAAA,CACZ,CACF,CAEA,IAAI,QAAmB,CA3BxB,IAAAC,EA4BE,QAAOA,EAAA,KAAK,aAAa,QAAQ,IAA1B,YAAAA,EAA6B,MAAM,OAAQ,EACnD,CAEA,aAAc,CACb,GAAI,CAAC,KAAK,KAAM,OAChB,MAAMC,EAAW,IAAI,SAAS,KAAK,IAAI,EAIhC,MAFM,CAAC,GAAG,IAAI,IAAI,MAAM,KAAKA,EAAS,MAAM,CAAC,CAAC,EAGnD,OAAQC,GAAQ,CAAC,KAAK,OAAO,SAASA,CAAG,GAAKD,EAAS,OAAOC,CAAG,EAAE,KAAMC,GAAUA,IAAU,EAAE,CAAC,EAChG,IAAKD,GAAQ,CAEb,MAAME,EADSH,EAAS,OAAOC,CAAG,EACN,OAAQC,GAAU,OAAOA,GAAU,QAAQ,EAChE,MAAA,CACN,IAAAD,EACA,MAAOE,CAAA,CACR,CACA,CAGH,CAEA,QAAS,CACF,MAAAC,EAAO,KAAK,cAEZC,EAAgBC,GACdA,EAAO,SAAW,EAAIA,EAAO,CAAC,EAAIA,EAAO,IAAKJ,GAAU,SAASA,CAAK,SAAS,EAAE,KAAK,IAAI,EAG7F,KAAA,UAAY,OAAOE,GAAA,YAAAA,EACrB,IAAKG,GAAS,eAAe,KAAK,aAAa,YAAY,EAAIf,EAAmBe,EAAK,GAAG,EAAIA,EAAK,GAAG,cAAcF,EAAaE,EAAK,KAAK,CAAC,SAC7I,KAAK,GAAG,OACX,CACD,CAEA,eAAe,OAAO,aAAcZ,CAAiB"}