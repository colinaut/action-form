var l=Object.defineProperty;var h=(s,r,e)=>r in s?l(s,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[r]=e;var c=(s,r,e)=>(h(s,typeof r!="symbol"?r+"":r,e),e);function o(s){return s instanceof HTMLInputElement&&["radio","checkbox","range","color","file"].includes(s.type)||s instanceof HTMLSelectElement}class v extends HTMLElement{constructor(){super();c(this,"addAria",e=>{const t=this.getAttribute("id")||`${e.id||e.name||e.tagName.toLowerCase()}-${Math.random().toString(36).substring(2,9)}`;this.setAttribute("id",t),e.setAttribute("aria-describedby",t)});c(this,"eventHandler",e=>{const t=e.target;if(!t)return;const n=t;!this.show(n)&&n.dataset.eventType!=="input"&&(n.dataset.eventType=n.dataset.eventType||o(n)?"change":"blur",n.removeEventListener(n.dataset.eventType,this.eventHandler),n.dataset.eventType="input",n.addEventListener(n.dataset.eventType,this.eventHandler))})}show(e,t=!1){return(e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement||e instanceof HTMLSelectElement)&&(t=t||e.checkValidity()),t?(this.removeAttribute("show"),e.removeAttribute("aria-invalid")):(this.setAttribute("show",""),e.setAttribute("aria-invalid","true")),t}connectedCallback(){var n;const e=this.getAttribute("for")||"",t=e?document.getElementById(e):(n=this.closest("label"))==null?void 0:n.querySelector("input, select, textarea, fieldset");if(t!=null&&t.matches("input, select, textarea, fieldset")){const a=t;this.addAria(a),t instanceof HTMLFieldSetElement?this.addMinMaxField(t):(a.dataset.eventType=a.dataset.eventType||o(a)?"change":"blur",a.addEventListener("toggle-error",()=>{this.show(a)}),this.eventHandler=this.eventHandler.bind(a),a.addEventListener(a.dataset.eventType,this.eventHandler))}}addMinMaxField(e){const t=e.querySelectorAll("input, select, textarea"),n=parseInt(this.getAttribute("min")||"1"),a=parseInt(this.getAttribute("max")||"0")||t.length;let i=e.querySelector("af-group-count");i||(i=document.createElement("af-group-count"),i.setAttribute("hidden",""),e.append(i)),i.setAttribute("min",String(n)),i.setAttribute("max",String(a)),e.addEventListener("change",()=>{const u=this.getValues(t);if(!i)return;i.value=u.length;const d=i.checkValidity();this.show(e,d)})}getValues(e){const t=[];return e.forEach(n=>{n instanceof HTMLInputElement&&["checkbox","radio"].includes(n.type)?n.checked&&t.push(n.value):n.value&&n.checkValidity()&&t.push(n.value)}),t}}customElements.define("af-error",v);
//# sourceMappingURL=af-error.js.map
