var u=Object.defineProperty;var c=(n,r,t)=>r in n?u(n,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[r]=t;var i=(n,r,t)=>(c(n,typeof r!="symbol"?r+"":r,t),t);function f(n){return n.replace(/[-_](.)/g,function(r){return" "+r.charAt(1).toUpperCase()}).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/^./,function(r){return r.toUpperCase()})}class g extends HTMLElement{constructor(){super();i(this,"form");const t=this.getAttribute("for");if(this.form=t?document.getElementById(t):this.closest("form"),!this.form)return;this.render();const s=this.getAttribute("event-type")||"change";this.form.addEventListener(s,()=>{this.render()})}get ignore(){var t;return((t=this.getAttribute("ignore"))==null?void 0:t.split(","))||[]}getFormData(){if(!this.form)return;const t=new FormData(this.form);return[...new Set(Array.from(t.keys()))].filter(e=>!this.ignore.includes(e)&&t.getAll(e).some(o=>o!=="")).map(e=>{const a=t.getAll(e).filter(l=>typeof l=="string");return{key:e,value:a}})}render(){const t=this.getFormData(),s=e=>e.length===1?e[0]:e.map(o=>`<span>${o}</span>`).join(", ");this.innerHTML=`<ul>${t==null?void 0:t.map(e=>`<li><strong>${this.hasAttribute("title-case")?f(e.key):e.key}</strong>: ${s(e.value)}</li>`).join("")}</ul>`}}customElements.define("af-preview",g);
//# sourceMappingURL=af-preview.js.map
