{"version":3,"file":"af-progress.js","sources":["../src/af-progress.ts"],"sourcesContent":["import type ActionFormStep from \"./af-step\";\nimport type ActionForm from \"./action-form\";\nexport default class ActionFormProgress extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\n\t\tif (!this.actionForm || !this.steps) return;\n\n\t\tthis.actionForm.addEventListener(\"af-step\", () => {\n\t\t\tthis.render();\n\t\t});\n\n\t\tthis.render();\n\n\t\tthis.shadow.addEventListener(\"click\", (e) => {\n\t\t\tconst target = e.target;\n\t\t\tif (target instanceof HTMLButtonElement && target.matches(\".step\") && !target.disabled) {\n\t\t\t\tconst step = Number(target.dataset.index || 0);\n\t\t\t\t// dispatch event to action-form which handles show/hide of steps\n\n\t\t\t\tthis.dispatchEvent(new CustomEvent(\"af-step\", { bubbles: true, composed: true, detail: { step } }));\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate form = this.closest(\"form\");\n\tprivate actionForm = this.closest(\"action-form\") as ActionForm | null;\n\tprivate steps: NodeListOf<ActionFormStep> | undefined = this.actionForm?.steps;\n\n\tget stepIndex(): number {\n\t\treturn this.actionForm?.stepIndex || 0;\n\t}\n\n\tprivate render() {\n\t\tif (!this.form || !this.steps) return;\n\n\t\t// TODO: simplify this\n\t\tconst style = `\n        <style>\n        :host {\n            display: grid;\n            position: relative;\n            align-items: center;\n            --step-border-size: .22em;\n            --step-bg: white;\n            --step-text: inherit;\n            --inactive: lightgray;\n            --active: lightseagreen;\n            --incomplete: coral;\n            --completed: var(--active);\n            --completed-bg: var(--active);\n            --completed-text: white;\n        }\n        .progress {\n            background: var(--active);\n            height: 0.5em;\n            width: var(--progress, 0%);\n            grid-row: -1/1;\n            grid-column: -1/1;\n        }\n        nav {\n            margin: 0;\n            padding: 0;\n            list-style: none;\n            display: flex;\n            justify-content: space-between;\n            grid-row: -1/1;\n            grid-column: -1/1;\n        }\n        .bg {\n            background: var(--inactive);\n            height: 0.5em;\n            grid-row: -1/1;\n            grid-column: -1/1;\n        }\n        .step {\n            border: var(--step-border-size) solid var(--inactive);\n            border-radius: 100%;\n            width: 2em;\n            height: 2em;\n            line-height: 1.65em;\n            text-align: center;\n            background: var(--step-bg);\n            font-size: 0.9em;\n            position: relative;\n            z-index: 1;\n            padding: 0;\n            margin: 0;\n            cursor: pointer;\n            color: var(--step-text);\n        }\n        .step.completed {\n            border-color: var(--completed);\n            background: var(--completed-bg);\n            color: var(--completed-text);\n        }\n        .step:disabled {\n            opacity: 1;\n            cursor: not-allowed;\n        }\n        .step[aria-current=\"step\"] {\n            border-color: var(--active);\n        }\n        .step:not(.completed):has(~ .step[aria-current=\"step\"]) {\n            border-color: var(--incomplete);\n        }\n        </style>\n        `;\n\n\t\t// TODO: add step titles from af-step\n\t\tconst progressPercentage = (this.stepIndex / (this.steps.length - 1)) * 100;\n\t\tthis.shadow.innerHTML = `${style}\n        <div class=\"bg\" part=\"bg\"></div>\n        <div class=\"progress\" style=\"--progress: ${progressPercentage}%\" part=\"progress\"></div>\n        <nav part=\"nav\">\n        ${Array.from(this.steps)\n\t\t\t.map((step, index) => {\n\t\t\t\tconst active = index === this.stepIndex ? \"active\" : \"\";\n\t\t\t\tconst completed = step.completed ? \"completed\" : \"\";\n\t\t\t\tconst disabled = this.hasAttribute(\"enable-all\") || this.stepIndex > index ? \"\" : \"disabled\";\n\t\t\t\tconst title = step.getAttribute(\"progress-title\") || \"\";\n\t\t\t\treturn `<button type=\"button\" part=\"step ${completed} ${active}\" ${disabled} title=\"${title}\" class=\"step ${completed}\" ${\n\t\t\t\t\tactive && `aria-current=\"step\"`\n\t\t\t\t} aria-label=\"Step ${index + 1}\" data-index=\"${index}\">${index + 1}</button>`;\n\t\t\t})\n\t\t\t.join(\"\")}\n        </nav>\n        `;\n\t}\n}\ncustomElements.define(\"af-progress\", ActionFormProgress);\n"],"names":["_a","ActionFormProgress","__publicField","target","step","style","progressPercentage","index","active","completed","disabled","title"],"mappings":"wKAEA,IAAAA,EAAA,MAAqBC,UAA2B,WAAY,CAE3D,aAAc,CACP,QAFCC,EAAA,eAyBAA,EAAA,YAAO,KAAK,QAAQ,MAAM,GAC1BA,EAAA,kBAAa,KAAK,QAAQ,aAAa,GACvCA,EAAA,cAAgDF,EAAA,KAAK,aAAL,YAAAA,EAAiB,OAxBxE,KAAK,OAAS,KAAK,aAAa,CAAE,KAAM,OAAQ,EAE5C,GAAC,KAAK,YAAc,CAAC,KAAK,SAEzB,KAAA,WAAW,iBAAiB,UAAW,IAAM,CACjD,KAAK,OAAO,CAAA,CACZ,EAED,KAAK,OAAO,EAEZ,KAAK,OAAO,iBAAiB,QAAU,GAAM,CAC5C,MAAMG,EAAS,EAAE,OACb,GAAAA,aAAkB,mBAAqBA,EAAO,QAAQ,OAAO,GAAK,CAACA,EAAO,SAAU,CACvF,MAAMC,EAAO,OAAOD,EAAO,QAAQ,OAAS,CAAC,EAG7C,KAAK,cAAc,IAAI,YAAY,UAAW,CAAE,QAAS,GAAM,SAAU,GAAM,OAAQ,CAAE,KAAAC,CAAK,CAAA,CAAG,CAAC,EAClG,KAAK,OAAO,CACb,CAAA,CACA,EACF,CAMA,IAAI,WAAoB,CA9BzB,IAAAJ,EA+BS,QAAAA,EAAA,KAAK,aAAL,YAAAA,EAAiB,YAAa,CACtC,CAEQ,QAAS,CAChB,GAAI,CAAC,KAAK,MAAQ,CAAC,KAAK,MAAO,OAG/B,MAAMK,EAAQ,ylCAyERC,EAAsB,KAAK,WAAa,KAAK,MAAM,OAAS,GAAM,IACnE,KAAA,OAAO,UAAY,GAAGD,CAAK,2EAEiBC,CAAkB,2CAE3D,MAAM,KAAK,KAAK,KAAK,EAC3B,IAAI,CAACF,EAAMG,IAAU,CACrB,MAAMC,EAASD,IAAU,KAAK,UAAY,SAAW,GAC/CE,EAAYL,EAAK,UAAY,YAAc,GAC3CM,EAAW,KAAK,aAAa,YAAY,GAAK,KAAK,UAAYH,EAAQ,GAAK,WAC5EI,EAAQP,EAAK,aAAa,gBAAgB,GAAK,GAC9C,MAAA,oCAAoCK,CAAS,IAAID,CAAM,KAAKE,CAAQ,WAAWC,CAAK,iBAAiBF,CAAS,KACpHD,GAAU,qBACX,qBAAqBD,EAAQ,CAAC,iBAAiBA,CAAK,KAAKA,EAAQ,CAAC,WAClE,CAAA,EACA,KAAK,EAAE,CAAC,QAGX,CACD,CACA,eAAe,OAAO,cAAeN,CAAkB"}