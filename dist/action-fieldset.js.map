{"version":3,"file":"action-fieldset.js","sources":["../src/action-fieldset.ts"],"sourcesContent":["function isChangeField(field: Element): boolean {\n\treturn (field instanceof HTMLInputElement && [\"radio\", \"checkbox\", \"range\", \"color\", \"file\"].includes(field.type)) || field instanceof HTMLSelectElement;\n}\nfunction isBlurField(field: Element): boolean {\n\treturn (\n\t\t(field instanceof HTMLInputElement && [\"text\", \"email\", \"tel\", \"password\", \"date\", \"month\", \"number\", \"datetime-local\", \"time\", \"url\", \"week\"].includes(field.type)) ||\n\t\tfield instanceof HTMLTextAreaElement\n\t);\n}\n\nexport default class ActionFieldSet extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tprivate groupFields = this.querySelectorAll(\"input, select, textarea\") as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;\n\n\tpublic connectedCallback(): void {\n\t\tconst form = this.closest(\"form\");\n\t\tconst watch = this.getAttribute(\"watch\");\n\t\tif (form && watch) {\n\t\t\tconsole.log(`watching ${watch}`);\n\t\t\t// disable all fields in the group\n\t\t\tthis.groupFields.forEach((field) => {\n\t\t\t\tfield.setAttribute(\"disabled\", \"\");\n\t\t\t});\n\t\t\t// Set up event listeners for field matching the name\n\t\t\tconst namedFields = form.querySelectorAll(`:where(input, select, textarea, fieldset)[name=${watch}]`) as NodeListOf<\n\t\t\t\tHTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | HTMLFieldSetElement\n\t\t\t>;\n\n\t\t\tif (namedFields.length === 0) return;\n\n\t\t\t// allow watching fieldset for validity changes\n\t\t\tnamedFields.forEach((field) => {\n\t\t\t\tif (field instanceof HTMLFieldSetElement) {\n\t\t\t\t\t// check if the field in the fieldset are valid\n\t\t\t\t\tfield.addEventListener(\"change\", () => {\n\t\t\t\t\t\tthis.show(field.querySelectorAll(\":invalid\").length === 0);\n\t\t\t\t\t});\n\t\t\t\t} else if (isBlurField(field)) {\n\t\t\t\t\tfield.addEventListener(\"blur\", () => {\n\t\t\t\t\t\tthis.show(this.checkMatches([field.value]));\n\t\t\t\t\t});\n\t\t\t\t} else if (isChangeField(field)) {\n\t\t\t\t\tfield.addEventListener(\"change\", () => {\n\t\t\t\t\t\tif (field.matches(\"[type=checkbox], [type=radio]\")) {\n\t\t\t\t\t\t\tconst checkedFields = Array.from(namedFields).filter((el) => el instanceof HTMLInputElement && el.checked) as HTMLInputElement[];\n\t\t\t\t\t\t\tthis.show(this.checkMatches(checkedFields.map((el) => el.value)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.show(this.checkMatches([field.value]));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate checkMatches(values: string[]): boolean {\n\t\tconst showIf = this.getAttribute(\"showIf\") || \"\";\n\t\treturn values.some((value) => {\n\t\t\t// TODO: test the regex pattern\n\t\t\tif (this.hasAttribute(\"regex\")) {\n\t\t\t\tconst regex = new RegExp(value);\n\t\t\t\treturn regex.test(showIf);\n\t\t\t} else {\n\t\t\t\treturn showIf === value;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate show(show: boolean): void {\n\t\tif (show) {\n\t\t\tthis.removeAttribute(\"hidden\");\n\t\t\tthis.groupFields.forEach((field) => {\n\t\t\t\tfield.removeAttribute(\"disabled\");\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setAttribute(\"hidden\", \"\");\n\t\t\tthis.groupFields.forEach((field) => {\n\t\t\t\tfield.setAttribute(\"disabled\", \"\");\n\t\t\t});\n\t\t}\n\t}\n\n\t// public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t// \tconsole.log(\"changed\", name, oldValue, newValue);\n\t// }\n}\ncustomElements.define(\"action-fieldset\", ActionFieldSet);\n"],"names":["isChangeField","field","isBlurField","ActionFieldSet","__publicField","form","watch","namedFields","checkedFields","el","values","showIf","value","show"],"mappings":"wKAAA,SAASA,EAAcC,EAAyB,CAC/C,OAAQA,aAAiB,kBAAoB,CAAC,QAAS,WAAY,QAAS,QAAS,MAAM,EAAE,SAASA,EAAM,IAAI,GAAMA,aAAiB,iBACxI,CACA,SAASC,EAAYD,EAAyB,CAC7C,OACEA,aAAiB,kBAAoB,CAAC,OAAQ,QAAS,MAAO,WAAY,OAAQ,QAAS,SAAU,iBAAkB,OAAQ,MAAO,MAAM,EAAE,SAASA,EAAM,IAAI,GAClKA,aAAiB,mBAEnB,CAEA,MAAqBE,UAAuB,WAAY,CACvD,aAAc,CACP,QAGCC,EAAA,mBAAc,KAAK,iBAAiB,yBAAyB,EAFrE,CAIO,mBAA0B,CAC1B,MAAAC,EAAO,KAAK,QAAQ,MAAM,EAC1BC,EAAQ,KAAK,aAAa,OAAO,EACvC,GAAID,GAAQC,EAAO,CAGb,KAAA,YAAY,QAASL,GAAU,CAC7BA,EAAA,aAAa,WAAY,EAAE,CAAA,CACjC,EAED,MAAMM,EAAcF,EAAK,iBAAiB,kDAAkDC,CAAK,GAAG,EAIpG,GAAIC,EAAY,SAAW,EAAG,OAGlBA,EAAA,QAASN,GAAU,CAC1BA,aAAiB,oBAEdA,EAAA,iBAAiB,SAAU,IAAM,CACtC,KAAK,KAAKA,EAAM,iBAAiB,UAAU,EAAE,SAAW,CAAC,CAAA,CACzD,EACSC,EAAYD,CAAK,EACrBA,EAAA,iBAAiB,OAAQ,IAAM,CACpC,KAAK,KAAK,KAAK,aAAa,CAACA,EAAM,KAAK,CAAC,CAAC,CAAA,CAC1C,EACSD,EAAcC,CAAK,GACvBA,EAAA,iBAAiB,SAAU,IAAM,CAClC,GAAAA,EAAM,QAAQ,+BAA+B,EAAG,CAC7C,MAAAO,EAAgB,MAAM,KAAKD,CAAW,EAAE,OAAQE,GAAOA,aAAc,kBAAoBA,EAAG,OAAO,EACpG,KAAA,KAAK,KAAK,aAAaD,EAAc,IAAKC,GAAOA,EAAG,KAAK,CAAC,CAAC,CAAA,MAEhE,KAAK,KAAK,KAAK,aAAa,CAACR,EAAM,KAAK,CAAC,CAAC,CAC3C,CACA,CACF,CACA,CACF,CACD,CAEQ,aAAaS,EAA2B,CAC/C,MAAMC,EAAS,KAAK,aAAa,QAAQ,GAAK,GACvC,OAAAD,EAAO,KAAME,GAEf,KAAK,aAAa,OAAO,EACd,IAAI,OAAOA,CAAK,EACjB,KAAKD,CAAM,EAEjBA,IAAWC,CAEnB,CACF,CAEQ,KAAKC,EAAqB,CAC7BA,GACH,KAAK,gBAAgB,QAAQ,EACxB,KAAA,YAAY,QAASZ,GAAU,CACnCA,EAAM,gBAAgB,UAAU,CAAA,CAChC,IAEI,KAAA,aAAa,SAAU,EAAE,EACzB,KAAA,YAAY,QAASA,GAAU,CAC7BA,EAAA,aAAa,WAAY,EAAE,CAAA,CACjC,EAEH,CAKD,CACA,eAAe,OAAO,kBAAmBE,CAAc"}