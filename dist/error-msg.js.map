{"version":3,"file":"error-msg.js","sources":["../src/error-msg.ts"],"sourcesContent":["function isChangeField(field: Element): boolean {\n\treturn (field instanceof HTMLInputElement && [\"radio\", \"checkbox\", \"range\", \"color\", \"file\"].includes(field.type)) || field instanceof HTMLSelectElement;\n}\n\nfunction isBlurField(field: Element): boolean {\n\treturn (\n\t\t(field instanceof HTMLInputElement && [\"text\", \"email\", \"tel\", \"password\", \"date\", \"month\", \"number\", \"datetime-local\", \"time\", \"url\", \"week\"].includes(field.type)) ||\n\t\tfield instanceof HTMLTextAreaElement\n\t);\n}\n\nexport default class ErrorMsg extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tprivate hiddenValid = document.createElement(\"input\");\n\n\tprivate hide(valid: boolean, el: HTMLElement): void {\n\t\tif (valid) {\n\t\t\tthis.removeAttribute(\"show\");\n\t\t\tel.removeAttribute(\"aria-invalid\");\n\t\t} else {\n\t\t\tthis.setAttribute(\"show\", \"\");\n\t\t\tel.setAttribute(\"aria-invalid\", \"true\");\n\t\t}\n\t}\n\n\tprivate getMakeId = (watch: string) => {\n\t\tconst id = this.getAttribute(\"id\");\n\t\tif (id) return id;\n\t\tconst randomId = `${watch}-${Math.random().toString(36).substring(2, 9)}`;\n\t\tthis.setAttribute(\"id\", randomId);\n\t\treturn randomId;\n\t};\n\n\t// TODO: Clean up this code\n\t// TODO: add ARIA for error messages\n\tpublic connectedCallback(): void {\n\t\t// attributes\n\t\tconst watch = this.getAttribute(\"watch\") || \"\";\n\n\t\t// parent form\n\t\tconst form = this.closest(\"form\");\n\t\t// Get all fields that match the name in this form\n\t\tconst el = form?.querySelector(`:where(input, select, textarea, fieldset)[name=${watch}]`) as HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement;\n\n\t\t// If no form or fields then return\n\t\tif (!el) return;\n\n\t\t// Add random id to error message\n\t\tconst id = this.getMakeId(watch);\n\t\tel.setAttribute(\"aria-describedby\", id);\n\n\t\tconsole.log(`watching ${watch}`);\n\n\t\tif (isBlurField(el)) {\n\t\t\tel.addEventListener(\"blur\", () => {\n\t\t\t\tconsole.log(\"blur\", el);\n\t\t\t\tthis.hide(el.checkValidity(), el);\n\t\t\t});\n\t\t}\n\n\t\tif (isChangeField(el)) {\n\t\t\tel.addEventListener(\"change\", () => {\n\t\t\t\tthis.hide(el.checkValidity(), el);\n\t\t\t});\n\t\t}\n\n\t\tif (el instanceof HTMLFieldSetElement) {\n\t\t\t// get all child fields\n\t\t\tconst fieldsetFields = el.querySelectorAll(\"input, select, textarea\") as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;\n\t\t\t// add extra hidden checkbox to set validity for the fieldset element and form\n\t\t\tthis.addValidityField(el, watch);\n\t\t\tconst min = Number(el.getAttribute(\"min\") || 1);\n\t\t\tconst max = Number(el.getAttribute(\"max\") || fieldsetFields.length);\n\n\t\t\tel.addEventListener(\"change\", (event) => {\n\t\t\t\tif (min || max) {\n\t\t\t\t\t// if min or max set then update validity hidden field based the fields in the fieldset\n\t\t\t\t\tconst target = event.target;\n\n\t\t\t\t\t// if target is not an element\n\t\t\t\t\tif (!(target instanceof HTMLSelectElement || target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement)) return;\n\n\t\t\t\t\t// TODO: test this with a mix of fields like fill in at least one tel field\n\t\t\t\t\tif (Array.from(fieldsetFields).includes(target)) {\n\t\t\t\t\t\tconsole.log(\"change array\", target);\n\t\t\t\t\t\tconst checked = Array.from(fieldsetFields).filter((field) => {\n\t\t\t\t\t\t\tif (field instanceof HTMLInputElement && [\"checkbox\", \"radio\"].includes(field.type)) {\n\t\t\t\t\t\t\t\treturn field.checked;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn field.value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (checked.length >= min && checked.length <= max) {\n\t\t\t\t\t\t\tthis.hiddenValid.checked = true;\n\t\t\t\t\t\t\tthis.dispatchHiddenValid(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error(`${watch} invalid (min: ${min} max: ${max} checked: ${checked.length})`);\n\t\t\t\t\t\t\tthis.dispatchHiddenValid(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check all elements in fieldset are valid\n\t\t\t\tthis.hide(el.querySelectorAll(\":invalid\").length === 0, el);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate dispatchHiddenValid(checked: boolean) {\n\t\tthis.hiddenValid.checked = checked;\n\t\tthis.hiddenValid.dispatchEvent(new Event(\"change\", { bubbles: true }));\n\t}\n\n\t/**\n\t * Adds a hidden validity field to the DOM element.\n\t */\n\tprivate addValidityField(el: HTMLFieldSetElement, name: string) {\n\t\tconst hiddenValid = this.hiddenValid;\n\t\thiddenValid.type = \"checkbox\";\n\t\thiddenValid.name = `action-fieldset-${name}`;\n\t\thiddenValid.setAttribute(\"required\", \"\");\n\t\thiddenValid.style.display = \"none\";\n\t\thiddenValid.value = \"valid\";\n\t\tel.append(hiddenValid);\n\t}\n\n\t// public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t// \tconsole.log(\"changed\", name, oldValue, newValue);\n\t// }\n}\ncustomElements.define(\"error-msg\", ErrorMsg);\n"],"names":["isChangeField","field","isBlurField","ErrorMsg","__publicField","watch","id","randomId","valid","el","form","fieldsetFields","min","max","event","target","checked","name","hiddenValid"],"mappings":"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"}