{"version":3,"file":"af-error.js","sources":["../src/af-error.ts"],"sourcesContent":["import type ActionFormGroupCount from \"./af-group-count\";\nfunction isChangeField(field: Element): boolean {\n\treturn (field instanceof HTMLInputElement && [\"radio\", \"checkbox\", \"range\", \"color\", \"file\"].includes(field.type)) || field instanceof HTMLSelectElement;\n}\n\ntype HTMLFormElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement | HTMLFieldSetElement;\n\nexport default class ActionFormError extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tprivate show(el: HTMLElement, valid: boolean = false): boolean {\n\t\tif (el instanceof HTMLInputElement || el instanceof HTMLTextAreaElement || el instanceof HTMLSelectElement) {\n\t\t\tvalid = valid || el.checkValidity();\n\t\t}\n\t\tif (valid) {\n\t\t\tthis.removeAttribute(\"show\");\n\t\t\tel.removeAttribute(\"aria-invalid\");\n\t\t} else {\n\t\t\tthis.setAttribute(\"show\", \"\");\n\t\t\tel.setAttribute(\"aria-invalid\", \"true\");\n\t\t}\n\t\treturn valid;\n\t}\n\n\tprivate addAria = (target: HTMLFormElement) => {\n\t\tconst id = this.getAttribute(\"id\") || `${target.id || target.name || target.tagName.toLowerCase()}-${Math.random().toString(36).substring(2, 9)}`;\n\t\tthis.setAttribute(\"id\", id);\n\t\ttarget.setAttribute(\"aria-describedby\", id);\n\t};\n\n\t// TODO: Clean up this code\n\t// TODO: add ARIA for error messages\n\tpublic connectedCallback(): void {\n\t\t// get field ID from attribute\n\t\tconst targetId = this.getAttribute(\"for\") || \"\";\n\n\t\tconst target = targetId ? document.getElementById(targetId) : this.closest(\"label\")?.querySelector(`input, select, textarea, fieldset`);\n\n\t\tif (target?.matches(\"input, select, textarea, fieldset\")) {\n\t\t\tconst el = target as HTMLFormElement;\n\n\t\t\tconsole.log(`watching ${target.tagName.toLowerCase()} ${targetId}`);\n\n\t\t\t// Make id and add aria-describedby attribute to the target element\n\t\t\tthis.addAria(el);\n\n\t\t\tif (target instanceof HTMLFieldSetElement) {\n\t\t\t\t// add min and max attributes to the fieldset and event listener\n\t\t\t\tthis.addMinMaxField(target);\n\t\t\t} else {\n\t\t\t\t// add event type as a data attribute\n\t\t\t\tel.dataset.eventType = el.dataset.eventType || isChangeField(el) ? \"change\" : \"blur\";\n\n\t\t\t\t// add toggle-error event listener which is used to hide/show error message by af-step\n\t\t\t\tel.addEventListener(\"toggle-error\", () => {\n\t\t\t\t\t// console.log(\"toggle-error\", el.checkValidity(), el.name);\n\t\t\t\t\tthis.show(el);\n\t\t\t\t});\n\n\t\t\t\tthis.eventHandler = this.eventHandler.bind(el);\n\n\t\t\t\t// add event listeners for change and blur\n\t\t\t\tel.addEventListener(el.dataset.eventType, this.eventHandler);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate eventHandler = (event: Event) => {\n\t\tconst target = event.target;\n\t\tif (!target) return;\n\t\tconst el = target as HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement;\n\t\t// console.log(\"eventHandler\", this, el);\n\t\tconst valid = this.show(el);\n\t\tif (!valid && el.dataset.eventType !== \"input\") {\n\t\t\tel.dataset.eventType = el.dataset.eventType || isChangeField(el) ? \"change\" : \"blur\";\n\t\t\tel.removeEventListener(el.dataset.eventType, this.eventHandler);\n\t\t\tel.dataset.eventType = \"input\";\n\t\t\tel.addEventListener(el.dataset.eventType, this.eventHandler);\n\t\t}\n\t};\n\n\t// TODO: maybe convert this to it's own element fieldset-group-error\n\tprivate addMinMaxField(fieldset: HTMLFieldSetElement): void {\n\t\tconst fields = fieldset.querySelectorAll(\"input, select, textarea\") as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;\n\t\tconst min = parseInt(this.getAttribute(\"min\") || \"1\");\n\t\tconst max = parseInt(this.getAttribute(\"max\") || \"0\") || fields.length;\n\t\tlet counter = fieldset.querySelector(\"af-group-count\") as ActionFormGroupCount | null;\n\t\tif (!counter) {\n\t\t\tcounter = document.createElement(\"af-group-count\") as ActionFormGroupCount;\n\t\t\tcounter.setAttribute(\"hidden\", \"\");\n\t\t\tfieldset.append(counter);\n\t\t}\n\t\tcounter.setAttribute(\"min\", String(min)); // min = min;\n\t\tcounter.setAttribute(\"max\", String(max)); // max = max;\n\n\t\tfieldset.addEventListener(\"change\", () => {\n\t\t\tconst values = this.getValues(fields);\n\t\t\tif (!counter) return;\n\t\t\tcounter.value = values.length;\n\t\t\tconst isValid = counter.checkValidity();\n\t\t\t// console.log(\"ðŸš€ ~ ErrorMsg ~ fieldset.addEventListener ~ isValid:\", isValid);\n\t\t\tthis.show(fieldset, isValid);\n\t\t});\n\t}\n\n\tprivate getValues(fields: NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): string[] {\n\t\tconst values: string[] = [];\n\t\tfields.forEach((field) => {\n\t\t\tif (field instanceof HTMLInputElement && [\"checkbox\", \"radio\"].includes(field.type)) {\n\t\t\t\tif (field.checked) values.push(field.value);\n\t\t\t} else {\n\t\t\t\tfield.value && field.checkValidity() && values.push(field.value);\n\t\t\t}\n\t\t});\n\t\treturn values;\n\t}\n\n\t// public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t// \tconsole.log(\"changed\", name, oldValue, newValue);\n\t// }\n}\ncustomElements.define(\"af-error\", ActionFormError);\n"],"names":["isChangeField","field","ActionFormError","__publicField","target","id","event","el","valid","_a","targetId","fieldset","fields","min","max","counter","values","isValid"],"mappings":"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"}