var u=Object.defineProperty;var o=(s,e,t)=>e in s?u(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var r=(s,e,t)=>(o(s,typeof e!="symbol"?e+"":e,t),t);class l extends HTMLElement{constructor(){var t;super();r(this,"afFieldGroup",this.closest("af-field-group"));this.render(),(t=this.afFieldGroup)==null||t.addEventListener("change",()=>this.render())}get value(){return this.afFieldGroup?this.afFieldGroup.value:0}render(){this.innerHTML=`${this.value.toString()}`}}class a extends HTMLElement{constructor(){super();r(this,"shadow",this.attachShadow({mode:"open"}));r(this,"internals",this.attachInternals());r(this,"name",this.getAttribute("name")||"");this.render(),this.checkValidity(),this.addEventListener("change",t=>{t.target!==this&&(this.checkValidity(),this.dispatchEvent(new Event("change",{bubbles:!0,composed:!0})))})}get min(){return Number(this.getAttribute("min")||0)}get max(){return Number(this.getAttribute("max")||1/0)}get value(){let t=[];const n=this.querySelectorAll("input, select, textarea");return t=Array.from(n).filter(i=>i instanceof HTMLInputElement&&["checkbox","radio"].includes(i.type)?i.checked:i.checkValidity()&&i.value),t.length}set value(t){this.setAttribute("value",String(t))}focus(){const t=this.querySelector("input, select, textarea");t&&t.focus()}checkValidity(){const t=this.value>=this.min&&this.value<=this.max;return this.setValidity(t),t}setValidity(t){const n=t?{}:{customError:!0},i=t?"":"Value is out of range";this.internals.setValidity(n,i),this.setAttribute("validity",String(t))}render(){this.shadow.innerHTML="<slot></slot>"}}r(a,"formAssociated",!0);customElements.define("af-field-group",a);customElements.define("af-group-count",l);export{a as A};
//# sourceMappingURL=af-field-group.js.map
