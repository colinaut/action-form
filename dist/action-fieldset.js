var a=Object.defineProperty;var l=(e,i,s)=>i in e?a(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s;var o=(e,i,s)=>(l(e,typeof i!="symbol"?i+"":i,s),s);function u(e){return e instanceof HTMLInputElement&&["radio","checkbox","range","color","file"].includes(e.type)||e instanceof HTMLSelectElement}function d(e){return e instanceof HTMLInputElement&&["text","email","tel","password","date","month","number","datetime-local","time","url","week"].includes(e.type)||e instanceof HTMLTextAreaElement}class m extends HTMLElement{constructor(){super();o(this,"groupFields",this.querySelectorAll("input, select, textarea"))}connectedCallback(){const s=this.closest("form"),n=this.getAttribute("watch");if(s&&n){this.groupFields.forEach(t=>{t.setAttribute("disabled","")});const r=s.querySelectorAll(`:where(input, select, textarea, fieldset)[name=${n}]`);if(r.length===0)return;r.forEach(t=>{t instanceof HTMLFieldSetElement?t.addEventListener("change",()=>{this.show(t.querySelectorAll(":invalid").length===0)}):d(t)?t.addEventListener("blur",()=>{this.show(this.checkMatches([t.value]))}):u(t)&&t.addEventListener("change",()=>{if(t.matches("[type=checkbox], [type=radio]")){const h=Array.from(r).filter(c=>c instanceof HTMLInputElement&&c.checked);this.show(this.checkMatches(h.map(c=>c.value)))}else this.show(this.checkMatches([t.value]))})})}}checkMatches(s){const n=this.getAttribute("showIf")||"";return s.some(r=>this.hasAttribute("regex")?new RegExp(r).test(n):n===r)}show(s){s?(this.removeAttribute("hidden"),this.groupFields.forEach(n=>{n.removeAttribute("disabled")})):(this.setAttribute("hidden",""),this.groupFields.forEach(n=>{n.setAttribute("disabled","")}))}}customElements.define("action-fieldset",m);
//# sourceMappingURL=action-fieldset.js.map
